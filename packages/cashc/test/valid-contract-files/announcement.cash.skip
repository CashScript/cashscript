pragma cashscript ^0.6.0;

/* This is a contract showcasing covenants outside of regular transactional use.
 * It enforces the contract to make an "announcement" on Memo.cash, and send the
 * remainder of contract funds back to the contract.
 */
contract Announcement() {
    function announce(pubkey pk, sig s) {
        require(checkSig(s, pk));

        // Create the memo.cash announcement output
        bytes announcement = new OutputNullData([
            0x6d02,
            bytes('A contract may not injure a human being or, through inaction, allow a human being to come to harm.')
        ]);

        // Calculate leftover money after fee (1000 sats)
        // Add change output if there's enough leftover for another announcement
        // otherwise donate the remainder to the miner
        int minerFee = 1000;
        int changeAmount = int(bytes(tx.value)) - minerFee;
        if (changeAmount >= minerFee) {
            bytes32 change = new OutputP2SH(bytes8(changeAmount), hash160(tx.bytecode));
            require(tx.hashOutputs == hash256(announcement + change));
        } else {
            require(tx.hashOutputs == hash256(announcement));
        }
    }
}
